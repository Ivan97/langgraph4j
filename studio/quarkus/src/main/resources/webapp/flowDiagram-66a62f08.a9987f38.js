function e(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}var t=globalThis.parcelRequire0031,r=t.register;r("15VEc",function(r,n){e(r.exports,"r",()=>N);var i=t("hV1gR"),l=t("c0ySZ"),a=t("eXIZE"),d=t("b34XJ"),o=t("4LkSm"),s=t("elmIF"),h=t("2YFJl");let g={},c={},f={},u=(e,t)=>(d.l.trace("In isDescendant",t," ",e," = ",c[t].includes(e)),!!c[t].includes(e)),w=(e,t,r,n)=>{d.l.warn("Copying children of ",e,"root",n,"data",t.node(e),n);let i=t.children(e)||[];e!==n&&i.push(e),d.l.warn("Copying (nodes) clusterId",e,"nodes",i),i.forEach(i=>{if(t.children(i).length>0)w(i,t,r,n);else{let l=t.node(i);d.l.info("cp ",i," to ",n," with parent ",e),r.setNode(i,l),n!==t.parent(i)&&(d.l.warn("Setting parent",i,t.parent(i)),r.setParent(i,t.parent(i))),e!==n&&i!==e?(d.l.debug("Setting parent",i,e),r.setParent(i,e)):(d.l.info("In copy ",e,"root",n,"data",t.node(e),n),d.l.debug("Not Setting parent for node=",i,"cluster!==rootId",e!==n,"node!==clusterId",i!==e));let a=t.edges(i);d.l.debug("Copying Edges",a),a.forEach(i=>{d.l.info("Edge",i);let l=t.edge(i.v,i.w,i.name);d.l.info("Edge data",l,n);try{(d.l.info("Descendants of ",n," is ",c[n]),d.l.info("Edge is ",i),i.v!==n&&i.w!==n&&(c[n]?c[n].includes(i.v)||u(i.v,n)||u(i.w,n)||c[n].includes(i.w):(d.l.debug("Tilt, ",n,",not in descendants"),!1)))?(d.l.info("Copying as ",i.v,i.w,l,i.name),r.setEdge(i.v,i.w,l,i.name),d.l.info("newGraph edges ",r.edges(),r.edge(r.edges()[0]))):d.l.info("Skipping copy of edge ",i.v,"--\x3e",i.w," rootId: ",n," clusterId:",e)}catch(e){d.l.error(e)}})}d.l.debug("Removing node",i),t.removeNode(i)})},p=(e,t)=>{let r=t.children(e),n=[...r];for(let i of r)f[i]=e,n=[...n,...p(i,t)];return n},v=(e,t)=>{d.l.trace("Searching",e);let r=t.children(e);if(d.l.trace("Searching children of id ",e,r),r.length<1)return d.l.trace("This is a valid node",e),e;for(let n of r){let r=v(n,t);if(r)return d.l.trace("Found replacement for",e," => ",r),r}},y=e=>g[e]&&g[e].externalConnections&&g[e]?g[e].id:e,x=(e,t)=>{if(d.l.warn("extractor - ",t,l.write(e),e.children("D")),t>10)return void d.l.error("Bailing out");let r=e.nodes(),n=!1;for(let t of r){let r=e.children(t);n=n||r.length>0}if(!n)return void d.l.debug("Done, no node has children",e.nodes());for(let n of(d.l.debug("Nodes = ",r,t),r))if(d.l.debug("Extracting node",n,g,g[n]&&!g[n].externalConnections,!e.parent(n),e.node(n),e.children("D")," Depth ",t),g[n])if(!g[n].externalConnections&&e.children(n)&&e.children(n).length>0){d.l.warn("Cluster without external connections, without a parent and with children",n,t);let r="TB"===e.graph().rankdir?"LR":"TB";g[n]&&g[n].clusterData&&g[n].clusterData.dir&&(r=g[n].clusterData.dir,d.l.warn("Fixing dir",g[n].clusterData.dir,r));let i=new o.Graph({multigraph:!0,compound:!0}).setGraph({rankdir:r,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});d.l.warn("Old graph before copy",l.write(e)),w(n,e,i,n),e.setNode(n,{clusterNode:!0,id:n,clusterData:g[n].clusterData,labelText:g[n].labelText,graph:i}),d.l.warn("New graph after copy node: (",n,")",l.write(i)),d.l.debug("Old graph after copy",l.write(e))}else d.l.warn("Cluster ** ",n," **not meeting the criteria !externalConnections:",!g[n].externalConnections," no parent: ",!e.parent(n)," children ",e.children(n)&&e.children(n).length>0,e.children("D"),t),d.l.debug(g);else d.l.debug("Not a cluster",n,t);for(let n of(r=e.nodes(),d.l.warn("New list of nodes",r),r)){let r=e.node(n);d.l.warn(" Now next level",n,r),r.clusterNode&&x(r.graph,t+1)}},m=(e,t)=>{if(0===t.length)return[];let r=Object.assign(t);return t.forEach(t=>{let n=e.children(t),i=m(e,n);r=[...r,...i]}),r},b={rect:(e,t)=>{d.l.info("Creating subgraph rect for ",t.id,t);let r=(0,d.c)(),n=e.insert("g").attr("class","cluster"+(t.class?" "+t.class:"")).attr("id",t.id),i=n.insert("rect",":first-child"),l=(0,d.m)(r.flowchart.htmlLabels),o=n.insert("g").attr("class","cluster-label"),g="markdown"===t.labelType?(0,s.a)(o,t.labelText,{style:t.labelStyle,useHtmlLabels:l}):o.node().appendChild((0,a.c)(t.labelText,t.labelStyle,void 0,!0)),c=g.getBBox();if((0,d.m)(r.flowchart.htmlLabels)){let e=g.children[0],t=(0,h.select)(g);c=e.getBoundingClientRect(),t.attr("width",c.width),t.attr("height",c.height)}let f=0*t.padding,u=t.width<=c.width+f?c.width+f:t.width;t.width<=c.width+f?t.diff=(c.width-t.width)/2-t.padding/2:t.diff=-t.padding/2,d.l.trace("Data ",t,JSON.stringify(t)),i.attr("style",t.style).attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-u/2).attr("y",t.y-t.height/2-f/2).attr("width",u).attr("height",t.height+f);let{subGraphTitleTopMargin:w}=(0,a.g)(r);l?o.attr("transform",`translate(${t.x-c.width/2}, ${t.y-t.height/2+w})`):o.attr("transform",`translate(${t.x}, ${t.y-t.height/2+w})`);let p=i.node().getBBox();return t.width=p.width,t.height=p.height,t.intersect=function(e){return(0,a.i)(t,e)},n},roundedWithTitle:(e,t)=>{let r=(0,d.c)(),n=e.insert("g").attr("class",t.classes).attr("id",t.id),i=n.insert("rect",":first-child"),l=n.insert("g").attr("class","cluster-label"),o=n.append("rect"),s=l.node().appendChild((0,a.c)(t.labelText,t.labelStyle,void 0,!0)),g=s.getBBox();if((0,d.m)(r.flowchart.htmlLabels)){let e=s.children[0],t=(0,h.select)(s);g=e.getBoundingClientRect(),t.attr("width",g.width),t.attr("height",g.height)}g=s.getBBox();let c=0*t.padding,f=c/2,u=t.width<=g.width+t.padding?g.width+t.padding:t.width;t.width<=g.width+t.padding?t.diff=(g.width+0*t.padding-t.width)/2:t.diff=-t.padding/2,i.attr("class","outer").attr("x",t.x-u/2-f).attr("y",t.y-t.height/2-f).attr("width",u+c).attr("height",t.height+c),o.attr("class","inner").attr("x",t.x-u/2-f).attr("y",t.y-t.height/2-f+g.height-1).attr("width",u+c).attr("height",t.height+c-g.height-3);let{subGraphTitleTopMargin:w}=(0,a.g)(r);return l.attr("transform",`translate(${t.x-g.width/2}, ${t.y-t.height/2-t.padding/3+((0,d.m)(r.flowchart.htmlLabels)?5:3)+w})`),t.height=i.node().getBBox().height,t.intersect=function(e){return(0,a.i)(t,e)},n},noteGroup:(e,t)=>{let r=e.insert("g").attr("class","note-cluster").attr("id",t.id),n=r.insert("rect",":first-child"),i=0*t.padding,l=i/2;n.attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-t.width/2-l).attr("y",t.y-t.height/2-l).attr("width",t.width+i).attr("height",t.height+i).attr("fill","none");let d=n.node().getBBox();return t.width=d.width,t.height=d.height,t.intersect=function(e){return(0,a.i)(t,e)},r},divider:(e,t)=>{let r=e.insert("g").attr("class",t.classes).attr("id",t.id),n=r.insert("rect",":first-child"),i=0*t.padding;n.attr("class","divider").attr("x",t.x-t.width/2-i/2).attr("y",t.y-t.height/2).attr("width",t.width+i).attr("height",t.height+i);let l=n.node().getBBox();return t.width=l.width,t.height=l.height,t.diff=-t.padding/2,t.intersect=function(e){return(0,a.i)(t,e)},r}},E={},X=async(e,t,r,n,o,s)=>{d.l.info("Graph in recursive render: XXX",l.write(t),o);let h=t.graph().rankdir;d.l.trace("Dir in recursive render - dir:",h);let c=e.insert("g").attr("class","root");t.nodes()?d.l.info("Recursive render XXX",t.nodes()):d.l.info("No nodes found for",t),t.edges().length>0&&d.l.trace("Recursive edges",t.edge(t.edges()[0]));let f=c.insert("g").attr("class","clusters"),u=c.insert("g").attr("class","edgePaths"),w=c.insert("g").attr("class","edgeLabels"),p=c.insert("g").attr("class","nodes");await Promise.all(t.nodes().map(async function(e){let i=t.node(e);if(void 0!==o){let r=JSON.parse(JSON.stringify(o.clusterData));d.l.info("Setting data for cluster XXX (",e,") ",r,o),t.setNode(o.id,r),t.parent(e)||(d.l.trace("Setting parent",e,o.id),t.setParent(e,o.id,r))}if(d.l.info("(Insert) Node XXX"+e+": "+JSON.stringify(t.node(e))),i&&i.clusterNode){d.l.info("Cluster identified",e,i.width,t.node(e));let l=await X(p,i.graph,r,n,t.node(e),s),o=l.elem;(0,a.u)(i,o),i.diff=l.diff||0,d.l.info("Node bounds (abc123)",e,i,i.width,i.x,i.y),(0,a.s)(o,i),d.l.warn("Recursive render complete ",o,i)}else t.children(e).length>0?(d.l.info("Cluster - the non recursive path XXX",e,i.id,i,t),d.l.info(v(i.id,t)),g[i.id]={id:v(i.id,t),node:i}):(d.l.info("Node - the non recursive path",e,i.id,i),await (0,a.e)(p,t.node(e),h))})),t.edges().forEach(function(e){let r=t.edge(e.v,e.w,e.name);d.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),d.l.info("Edge "+e.v+" -> "+e.w+": ",e," ",JSON.stringify(t.edge(e))),d.l.info("Fix",g,"ids:",e.v,e.w,"Translating: ",g[e.v],g[e.w]),(0,a.f)(w,r)}),t.edges().forEach(function(e){d.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e))}),d.l.info("#############################################"),d.l.info("###                Layout                 ###"),d.l.info("#############################################"),d.l.info(t),(0,i.layout)(t),d.l.info("Graph after layout:",l.write(t));let y=0,{subGraphTitleTotalMargin:x}=(0,a.g)(s);return m(t,t.children()).forEach(function(e){let r=t.node(e);if(d.l.info("Position "+e+": "+JSON.stringify(t.node(e))),d.l.info("Position "+e+": ("+r.x,","+r.y,") width: ",r.width," height: ",r.height),r&&r.clusterNode)r.y+=x,(0,a.p)(r);else if(t.children(e).length>0){r.height+=x;d.l.trace("Inserting cluster");let e=r.shape||"rect";E[r.id]=b[e](f,r),g[r.id].node=r}else r.y+=x/2,(0,a.p)(r)}),t.edges().forEach(function(e){let i=t.edge(e);d.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(i),i),i.points.forEach(e=>e.y+=x/2);let l=(0,a.h)(u,e,i,g,r,t,n);(0,a.j)(i,l)}),t.nodes().forEach(function(e){let r=t.node(e);d.l.info(e,r.type,r.diff),"group"===r.type&&(y=r.diff)}),{elem:c,diff:y}},N=async(e,t,r,n,i)=>{(0,a.a)(e,r,n,i),(0,a.b)(),(0,a.d)(),E={},c={},f={},g={},d.l.warn("Graph at first:",JSON.stringify(l.write(t))),((e,t)=>{if(!e)return d.l.debug("Opting out, no graph ");for(let t of(d.l.debug("Opting in, graph "),e.nodes().forEach(function(t){e.children(t).length>0&&(d.l.warn("Cluster identified",t," Replacement id in edges: ",v(t,e)),c[t]=p(t,e),g[t]={id:v(t,e),clusterData:e.node(t)})}),e.nodes().forEach(function(t){let r=e.children(t),n=e.edges();r.length>0?(d.l.debug("Cluster identified",t,c),n.forEach(e=>{e.v!==t&&e.w!==t&&u(e.v,t)^u(e.w,t)&&(d.l.warn("Edge: ",e," leaves cluster ",t),d.l.warn("Descendants of XXX ",t,": ",c[t]),g[t].externalConnections=!0)})):d.l.debug("Not a cluster ",t,c)}),Object.keys(g))){let r=g[t].id,n=e.parent(r);n!==t&&g[n]&&!g[n].externalConnections&&(g[t].id=n)}e.edges().forEach(function(t){let r=e.edge(t);d.l.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),d.l.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(e.edge(t)));let n=t.v,i=t.w;if(d.l.warn("Fix XXX",g,"ids:",t.v,t.w,"Translating: ",g[t.v]," --- ",g[t.w]),g[t.v]&&g[t.w]&&g[t.v]===g[t.w]){d.l.warn("Fixing and trixing link to self - removing XXX",t.v,t.w,t.name),d.l.warn("Fixing and trixing - removing XXX",t.v,t.w,t.name),n=y(t.v),i=y(t.w),e.removeEdge(t.v,t.w,t.name);let l=t.w+"---"+t.v;e.setNode(l,{domId:l,id:l,labelStyle:"",labelText:r.label,padding:0,shape:"labelRect",style:""});let a=structuredClone(r),o=structuredClone(r);a.label="",a.arrowTypeEnd="none",o.label="",a.fromCluster=t.v,o.toCluster=t.v,e.setEdge(n,l,a,t.name+"-cyclic-special"),e.setEdge(l,i,o,t.name+"-cyclic-special")}else(g[t.v]||g[t.w])&&(d.l.warn("Fixing and trixing - removing XXX",t.v,t.w,t.name),n=y(t.v),i=y(t.w),e.removeEdge(t.v,t.w,t.name),n!==t.v&&(g[e.parent(n)].externalConnections=!0,r.fromCluster=t.v),i!==t.w&&(g[e.parent(i)].externalConnections=!0,r.toCluster=t.w),d.l.warn("Fix Replacing with XXX",n,i,t.name),e.setEdge(n,i,r,t.name))}),d.l.warn("Adjusted Graph",l.write(e)),x(e,0),d.l.trace(g)})(t),d.l.warn("Graph after:",JSON.stringify(l.write(t)));let o=(0,d.c)();await X(e,t,n,i,void 0,o)}}),r("c0ySZ",function(r,n){e(r.exports,"write",()=>d);var i=t("hNIl0");t("fpekr");var l=t("1G4S6"),a=t("3kePu");function d(e){var t,r,n={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:(t=e,a.default(t.nodes(),function(e){var r=t.node(e),n=t.parent(e),i={v:e};return l.default(r)||(i.value=r),l.default(n)||(i.parent=n),i})),edges:(r=e,a.default(r.edges(),function(e){var t=r.edge(e),n={v:e.v,w:e.w};return l.default(e.name)||(n.name=e.name),l.default(t)||(n.value=t),n}))};return l.default(e.graph())||(n.value=i.default(e.graph())),n}t("2rLgF")});
//# sourceMappingURL=flowDiagram-66a62f08.a9987f38.js.map
