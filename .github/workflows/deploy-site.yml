name: Deploy Site to GitHub Pages

on:
  push:
    branches: [ main ]  # or your default branch
  workflow_dispatch:    # allows manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs
          pip install mkdocs-jupyter
          pip install mkdocs mkdocs-material

      - name: Build Maven Site
        run: |
          mvn site:site site:stage -T1
          
      - name: Prepare MkDocs content
        run: |
          cp -r src/site/mkdocs target/mkdocs
          cp how-tos/*.ipynb target/mkdocs/how-tos
          cp -r target/staging/apidocs target/mkdocs/apidocs

      - name: Build MkDocs site
        run: mkdocs build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'target/sitedocs'  # MkDocs output directory

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

# To use this workflow:

# Make sure GitHub Pages is enabled in your repository settings
# Configure it to deploy from GitHub Actions
# The workflow will:

# Set up both Python and Java environments
# Build the Maven site
# Copy files as per your site-run.sh script
# Build the MkDocs site
# Deploy the result to GitHub Pages
# Note: If you have additional Python dependencies for MkDocs, create a requirements.txt file with them or modify the workflow to install them directly.

# Important Configuration Steps:

# Go to repository Settings â†’ Pages
# Under "Source", select "GitHub Actions"
# Make sure your repository has the necessary permissions enabled for GitHub Pages
# The site will be deployed automatically on pushes to main branch, or you can trigger it manually from the Actions tab.        